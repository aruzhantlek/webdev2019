Metadata-Version: 2.1
Name: django-class
Version: 2019.3.22
Summary: a bridge between django model and python classes
Home-page: https://github.com/looking-for-a-job/django-class.py
License: UNKNOWN
Keywords: django class
Platform: UNKNOWN
Classifier: Framework :: Django
Classifier: License :: Public Domain
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Software Development
Description-Content-Type: text/markdown
Requires-Dist: Django (>1.0)
Requires-Dist: public
Requires-Dist: setuptools

<!--
https://pypi.org/project/readme-generator/
-->

[![](https://img.shields.io/pypi/pyversions/django-class.svg?longCache=True)](https://pypi.org/project/django-class/)

#### Installation
```bash
$ [sudo] pip install django-class
```

#### Config
```python
INSTALLED_APPS = [
    "django_class",
]
```

#### Classes
class|`__doc__`
-|-
`django_class.models.AbsClass` |abstract class model. fields: `module_name`, `class_name`. methods: `getmodule()`, `getclass()`
`django_class.models.Class` |Class model. fields: `module_name`, `class_name`. methods: `getmodule()`, `getclass()`

#### Examples
save
```python
from django_class.models import Class
Class(module_name=cls.__module__, class_name=cls.__name__).save()
```

get module/class/instance
```python
for row in Class.objects.all():
    module = row.getmodule()
    cls = row.getclass()
```

subclassing. use `AbsClass`
```python
from django_class.models import AbsClass

class Class(AbsClass):
    ...
```

<p align="center">
    <a href="https://pypi.org/project/readme-generator/">readme-generator</a>
</p>

